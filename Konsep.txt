<=[konsep Penting Python]=>
Konsep-konsep Penting Yang Perlu Dipahami:
1.Variabel & Tipe Data:
    * Variabel:
        Variabel ibarat sebuah kotak atau wadah untuk menyimpan informasi.
        Contoh:
        - nama = "budi"
        - umur = 17
        Note : nama & umur adalah variabel
    * Tipe Data:
        Jenis informasi yang disimpan dalam variabel,ada beberapa tipe dasar:
        - String(str) : Teks yang ditulis diantara tanda kutip(" atau ')
        - Integer(int) : Bilangan bulat,seperti 10,25,-5
        - Float(float) : Bilangan desimal(floating point),seperti 3.14, -1.5, 175.1, Dll
        - Boolean(bool): True & False

2.Operator:
    * Simbol-Simbol Untuk Melakukan Operasi
    * Operator Arimatika:
        Untuk perhitungan matematis(+,-,*,/,%,**).Contoh Script:
        hasil = 5 + 3
        print(hasil)
        Output: 8
    * Operator  Perbandingan:
        Untuk membandingkan dua nilai (==, !=, <, >, <=, >=).
        Hasilnya selalu True atau False.Contoh Script:
        nilai = 5 > 3
        print(nilai)
        Output: True
    * Operator Logika:
        Untuk menggabungkan atau membalikkan kondisi (and, or, not).
        Contoh Script:
        kondisi1 = True
        kondisi2 = False
        hasil = kondisi1 and kondisi2
        print(hasil)
        Output: False

3.Struktur Kontrol(Conditional & Looping):
    * Conditional(if,elif & else):
        Untuk menjalankan kode tertentu berdasarkan kondisi tertentu.
        * if :
            Jika kondisi benar,jalankan kode ini
        * elif(else if) :
            Jika kondisi if tidak benar,jalankan kode ini
        * else :
            Jika semua kondisi sebelumnya salah,jalankan kode ini
        * Contoh Script:
        nilai = 80:
        if nilai >= 75:
            print("Lulus")
        elif nilai >= 60:
            print("Mengulang")
        else:
            print("Tidak Lulus")
    * Looping(for & while):
        Untuk menjalankan kode berulang kali:
        * for :
            Untuk mengulang sejumlah tertentu
            Contoh Script:
            for i in range(5): # Mengulang 5 kali
                print(i)
        * while :
            Untuk mengulang selama kondisi tertentu benar
            Contoh Script:
            angka = 0
            while angka < 5:
                print(angka)
                angka += 1 # Tambahkan 1 ke angka setiap perulangan

4.Structure Basic Data(List,Tuple,Dictionary,Set):
    * List:
        Kumpulan Data Yang Berutan,bisa diubah & bisa berisi tipe data.
        Ditulis dengan kurung siku[].Contoh Script:
        daftar_siswa = ["Yunita", "Kak Sarah"]
    * Tuple:
        Mirip dengan list, tapi tidak bisa diubah (immutable).
        Ditulis dengan kurung biasa ().Contoh Script:
        koordinat = (10, 20)
    * Dictionary:
        Kumpulan data yang tidak berurutan,
        disimpan dalam bentuk pasangan kunci:nilai.
        Ditulis dengan kurung kurawal {}.Contoh Script:
        siswa = {"nama": "Yunita Uswandari", "umur":17}
    * Set:
        Kumpulan data yang tidak berurutan, tidak bisa berisi data duplikat.
        Ditulis dengan kurung kurawal {}. Contoh Script:
        mata_pelajaran = {"Matematika", "Fisika", "Kimia"}

5.Function:
    * Blok kode yang diberi nama dan bisa dipanggil berulang kali untuk melakukan
    tugas tertentu. Ini membantu kode lebih rapi dan mudah digunakan kembali.
    * Menggunakan syntax def():
    * Contoh Script:
         def sapa(nama):
            print(f"Halo, {nama}!") # f-string untuk memasukkan variabel ke string
            sapa("Andi") # Memanggil fungsi

6.Module & Package:
    * Module:
        File Python yang berisi kode (fungsi, kelas, variabel) yang bisa kamu gunakan
        di program lain. Ibarat "perpustakaan" kecil.
    * Package:
        Kumpulan modul yang terorganisir dalam folder.
    * Kamu bisa mengimpor modul atau package yang sudah ada untuk menambah kemampuan
    programmu. Contoh: import math (untuk fungsi matematika), import random
    (untuk angka acak).

7.Handle Error(Try-Except):
    * Mencegah program crash (berhenti mendadak) ketika terjadi kesalahan.
    * try : Kode yang mungkin menimbulkan error
    * except : Tanggapan jika terjadi error
    * Contoh Script:
        try:
            angka = int(input("Masukkan angka: "))
            hasil = 10 / angka
            print(f"Hasilnya: {hasil}")
        except ValueError:
            print("Itu bukan angka!")
        except ZeroDivisionError:
            print("Tidak bisa dibagi nol!")

8.Class & Object:
    * Meskipun mungkin terdengar rumit, memahami dasar-dasarnya itu penting.
      OOP adalah cara memprogram dengan membuat "objek" yang memiliki sifat (atribut)
      dan perilaku (metode/fungsi).
    * Class(Kelas) : Cetak biru atau template untuk membuat objek.
    * Object(Objek) : Instance (turunan) dari sebuah kelas.
    * Contoh Script:
        class Hewan: # Ini adalah Class
            def __init__(self, nama, jenis): # Fungsi khusus untuk membuat objek
                self.nama = nama
                self.jenis = jenis

            def bersuara(self):
                print(f"{self.nama} bersuara.")

        kucing = Hewan("Kitty", "Kucing") # Ini adalah Object
        kucing.bersuara()
    * Untuk permulaan, fokus pada konsep Class dan Object saja.

Menguasai konsep-konsep ini akan menjadi fondasi yang sangat kuat bagimu untuk
membangun berbagai jenis program dengan Python. Latih terus dengan membuat proyek
kecil!