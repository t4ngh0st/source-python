import os
import sys
from colorama import Fore, Style
from pyfiglet import Figlet
from utils.config_loader import load_config

# Load konfigurasi
config = load_config(os.path.join(os.path.dirname(__file__), 'config', 'config.chpy')

class PentestChatbot:
    def __init__(self):
        self.config = config
        self.show_banner()
        
    def show_banner(self):
        if self.config.DISPLAY["SHOW_BANNER"]:
            os.system('cls' if os.name == 'nt' else 'clear')
            f = Figlet(font=self.config.DISPLAY["BANNER_FONT"])
            color = getattr(Fore, self.config.COLORS["BANNER"])
            print(color + f.renderText('PENTEST BOT') + Style.RESET_ALL)
            print("=" * self.config.DISPLAY["MAX_WIDTH"])
            print("Chatbot Uncensored untuk Pentest - Gunakan dengan Bijak!")
            print("=" * self.config.DISPLAY["MAX_WIDTH"])
            print("\n")
            
    def run(self):
        try:
            while True:
                prompt_color = getattr(Fore, self.config.COLORS["PROMPT"])
                user_input = input(prompt_color + self.config.DISPLAY["PROMPT_TEXT"] + Style.RESET_ALL).strip().lower()
                
                if not user_input:
                    continue
                    
                if user_input in ['exit', 'quit', 'q']:
                    print(getattr(Fore, self.config.COLORS["WARNING"]) + 
                          "Keluar dari Pentest Chatbot..." + 
                          Style.RESET_ALL)
                    break
                    
                self.process_input(user_input)
                
        except KeyboardInterrupt:
            print(getattr(Fore, self.config.COLORS["WARNING"]) + 
                  "\nKeluar dari Pentest Chatbot..." + 
                  Style.RESET_ALL)
            sys.exit(0)
            
    def process_input(self, user_input):
        # Implementasi proses input
        pass

if __name__ == "__main__":
    chatbot = PentestChatbot()
    chatbot.run()


# Kelebihan Struktur Ini:
#     1.Modular:
#         * Setiap komponen terpisah dengan jelas
#         * Mudah untuk menambah modul baru
#     2.Konfigurasi Terpusat:
#         * Semua pengaturan di satu tempat
#         * Mudah untuk environment berbeda (dev/prod)
#     3.Skalabilitas:
#         * Struktur siap untuk pengembangan fitur baru
#         * Memisahkan concerns dengan baik
#     4.Maintainability:
#         * Perubahan bisa dilakukan tanpa mengganggu sistem utama
#         * Dokumentasi terpisah dari kode